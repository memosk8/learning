// Installing all dependencies
   // If a project has a package.json file, by running:
   //    npm install
// Installing a single package
   // You can also install a specific package by running
   // npm install <package-name>

Where does npm install the packages?
When you install a package using npm you can perform 2 types of installation:

a local install
a global install
By default, when you type an npm install command, like:

BASH
npm install lodash

the package is installed in the current file tree, under the node_modules subfolder.
As this happens, npm also adds the lodash entry in the dependencies property of the package.json file present in the current folder.
A global installation is performed using the -g flag:

BASH
npm install -g lodash

When this happens, npm won't install the package under the local folder, but instead, it will use a global location.
Where, exactly?
The npm root -g command will tell you where that exact location is on your machine.
On macOS or Linux this location could be /usr/local/lib/node_modules. On Windows it could be C:\Users\YOU\AppData\Roaming\npm\node_modules
If you use nvm to manage Node.js versions, however, that location would differ.

I for example use nvm and my packages location was shown as /Users/joe/.nvm/versions/node/v8.9.0/lib/node_modules.

BASH 
npm list (packages installed locally)
   ├── chalk@4.1.2
   ├── inquirer@8.1.2
   └── progress@2.0.3

To uninstall a package you have previously installed locally (using npm install <package-name> in the node_modules folder, run
BASH
npm uninstall <package-name>

